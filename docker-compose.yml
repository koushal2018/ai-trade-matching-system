version: '3.8'

services:
  # Batch Processing Mode (Default)
  trade-matcher-batch:
    build: .
    image: trade-matcher:latest
    environment:
      - LLM_PROVIDER=bedrock
      - AWS_DEFAULT_REGION=us-east-1
      # Mount secrets as environment files or use Docker secrets
    env_file:
      - .env
    volumes:
      - ./data:/app/data
      - ./storage:/app/storage
      - ./processed:/app/processed
    profiles:
      - batch

  # Watch Folder Mode (Continuous Processing)
  trade-matcher-watcher:
    build: .
    image: trade-matcher:latest
    command: python -c "
      import time
      import os
      from pathlib import Path
      import sys
      sys.path.append('./src')
      from latest_trade_matching_agent.crew_fixed import LatestTradeMatchingAgent
      
      def process_new_files():
          for folder in ['BANK', 'COUNTERPARTY']:
              folder_path = Path(f'./data/{folder}')
              for pdf_file in folder_path.glob('*.pdf'):
                  processed_file = Path(f'./processed/{folder}') / pdf_file.name
                  if not processed_file.exists():
                      print(f'Processing: {pdf_file}')
                      try:
                          crew = LatestTradeMatchingAgent().crew()
                          result = crew.kickoff({'document_path': str(pdf_file)})
                          # Move to processed folder
                          processed_file.parent.mkdir(parents=True, exist_ok=True)
                          pdf_file.rename(processed_file)
                          print(f'Completed: {pdf_file.name}')
                      except Exception as e:
                          print(f'Error processing {pdf_file}: {e}')
      
      print('Starting trade matching watcher...')
      while True:
          process_new_files()
          time.sleep(30)
      "
    environment:
      - LLM_PROVIDER=bedrock
      - AWS_DEFAULT_REGION=us-east-1
    env_file:
      - .env
    volumes:
      - ./data:/app/data
      - ./storage:/app/storage
      - ./processed:/app/processed
    restart: unless-stopped
    profiles:
      - watcher

  # API Mode (Future Enhancement)
  # trade-matcher-api:
  #   build: .
  #   image: trade-matcher:latest
  #   command: uvicorn api:app --host 0.0.0.0 --port 8080
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     - LLM_PROVIDER=bedrock
  #     - AWS_DEFAULT_REGION=us-east-1
  #   env_file:
  #     - .env
  #   volumes:
  #     - ./storage:/app/storage
  #   profiles:
  #     - api

volumes:
  trade_data:
    driver: local
  trade_storage:
    driver: local

networks:
  trade_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16